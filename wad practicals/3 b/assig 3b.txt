To create four APIs for CRUD operations on register user, login user, and profile data using Node.js, Express.js, and MongoDB, follow these steps:

Step 1: Set up the project
Create a new directory for your project and navigate into it in your terminal or command prompt.
```
mkdir user-api
cd user-api
```

Initialize a new Node.js project by running the following command and following the prompts:
```
npm init
```

Install the necessary dependencies:
```
npm install express mongoose body-parser
```

Step 2: Create the server file
Create a file called `server.js` in the project directory and open it in a text editor.

Add the following code to `server.js` to set up the server and connect to the MongoDB database:
```javascript
const express = require('express');
const bodyParser = require('body-parser');
const mongoose = require('mongoose');

// Connect to MongoDB
mongoose.connect('mongodb://localhost/userdb', {
  useNewUrlParser: true,
  useUnifiedTopology: true
}).then(() => {
  console.log('Connected to MongoDB');
}).catch((error) => {
  console.error('Error connecting to MongoDB:', error);
});

// Create Express app
const app = express();

// Middleware
app.use(bodyParser.json());

// Routes
// Register user
app.post('/register', (req, res) => {
  // Handle user registration logic
});

// Login user
app.post('/login', (req, res) => {
  // Handle user login logic
});

// Get user profile
app.get('/profile/:userId', (req, res) => {
  // Handle getting user profile logic
});

// Update user profile
app.put('/profile/:userId', (req, res) => {
  // Handle updating user profile logic
});

// Delete user profile
app.delete('/profile/:userId', (req, res) => {
  // Handle deleting user profile logic
});

// Start the server
const port = process.env.PORT || 3000;
app.listen(port, () => {
  console.log(`Server started on port ${port}`);
});
```

Step 3: Define the User model
Create a new directory called `models` in the project directory and create a file called `user.js` inside it.

Add the following code to `user.js` to define the User model using Mongoose:
```javascript
const mongoose = require('mongoose');

const userSchema = new mongoose.Schema({
  name: { type: String, required: true },
  email: { type: String, required: true },
  password: { type: String, required: true }
});

const User = mongoose.model('User', userSchema);

module.exports = User;
```

Step 4: Implement the API endpoints
Open the `server.js` file again and implement the logic for the API endpoints.

Here's an example of how you can implement the CRUD operations for the user API:
```javascript
const express = require('express');
const bodyParser = require('body-parser');
const mongoose = require('mongoose');
const User = require('./models/user');

// ... (previous code omitted)

// Register user
app.post('/register', (req, res) => {
  const { name, email, password } = req.body;
  const user = new User({ name, email, password });

  user.save()
    .then(() => {
      res.status(201).json({ message: 'User registered successfully' });
    })
    .catch((error) => {
      res.status(500).json({ error: 'Error registering user' });
    });
});

// Login user
app.post('/login', (req, res) => {
  const { email, password } = req.body;

  User.findOne